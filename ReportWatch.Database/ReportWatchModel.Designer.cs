//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ReportWatchModel", "FK_Day_Symbol", "SymbolSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReportWatch.Database.Symbol), "DayPriceSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReportWatch.Database.DayPrice), true)]
[assembly: EdmRelationshipAttribute("ReportWatchModel", "FK_Report_Symbol", "SymbolSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReportWatch.Database.Symbol), "ReportSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReportWatch.Database.Report), true)]
[assembly: EdmRelationshipAttribute("ReportWatchModel", "FK_DayChange_Symbol", "Symbol", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReportWatch.Database.Symbol), "DayChangeSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReportWatch.Database.DayChange), true)]
[assembly: EdmRelationshipAttribute("ReportWatchModel", "FK_DayDifference_Symbol", "Symbol", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReportWatch.Database.Symbol), "DayDifferenceSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReportWatch.Database.DayDifference), true)]

#endregion

namespace ReportWatch.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ReportWatchEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ReportWatchEntities object using the connection string found in the 'ReportWatchEntities' section of the application configuration file.
        /// </summary>
        public ReportWatchEntities() : base("name=ReportWatchEntities", "ReportWatchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ReportWatchEntities object.
        /// </summary>
        public ReportWatchEntities(string connectionString) : base(connectionString, "ReportWatchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ReportWatchEntities object.
        /// </summary>
        public ReportWatchEntities(EntityConnection connection) : base(connection, "ReportWatchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DayPrice> DayPriceSet
        {
            get
            {
                if ((_DayPriceSet == null))
                {
                    _DayPriceSet = base.CreateObjectSet<DayPrice>("DayPriceSet");
                }
                return _DayPriceSet;
            }
        }
        private ObjectSet<DayPrice> _DayPriceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExceptionLog> ExceptionLogSet
        {
            get
            {
                if ((_ExceptionLogSet == null))
                {
                    _ExceptionLogSet = base.CreateObjectSet<ExceptionLog>("ExceptionLogSet");
                }
                return _ExceptionLogSet;
            }
        }
        private ObjectSet<ExceptionLog> _ExceptionLogSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> ReportSet
        {
            get
            {
                if ((_ReportSet == null))
                {
                    _ReportSet = base.CreateObjectSet<Report>("ReportSet");
                }
                return _ReportSet;
            }
        }
        private ObjectSet<Report> _ReportSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Symbol> SymbolSet
        {
            get
            {
                if ((_SymbolSet == null))
                {
                    _SymbolSet = base.CreateObjectSet<Symbol>("SymbolSet");
                }
                return _SymbolSet;
            }
        }
        private ObjectSet<Symbol> _SymbolSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DayChange> DayChangeSet
        {
            get
            {
                if ((_DayChangeSet == null))
                {
                    _DayChangeSet = base.CreateObjectSet<DayChange>("DayChangeSet");
                }
                return _DayChangeSet;
            }
        }
        private ObjectSet<DayChange> _DayChangeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DayDifference> DayDifferenceSet
        {
            get
            {
                if ((_DayDifferenceSet == null))
                {
                    _DayDifferenceSet = base.CreateObjectSet<DayDifference>("DayDifferenceSet");
                }
                return _DayDifferenceSet;
            }
        }
        private ObjectSet<DayDifference> _DayDifferenceSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DayPriceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDayPriceSet(DayPrice dayPrice)
        {
            base.AddObject("DayPriceSet", dayPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExceptionLogSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExceptionLogSet(ExceptionLog exceptionLog)
        {
            base.AddObject("ExceptionLogSet", exceptionLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportSet(Report report)
        {
            base.AddObject("ReportSet", report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SymbolSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymbolSet(Symbol symbol)
        {
            base.AddObject("SymbolSet", symbol);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DayChangeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDayChangeSet(DayChange dayChange)
        {
            base.AddObject("DayChangeSet", dayChange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DayDifferenceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDayDifferenceSet(DayDifference dayDifference)
        {
            base.AddObject("DayDifferenceSet", dayDifference);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dateReport">No Metadata Documentation available.</param>
        public int SetDayPriceHigh(Nullable<global::System.DateTime> dateReport)
        {
            ObjectParameter dateReportParameter;
            if (dateReport.HasValue)
            {
                dateReportParameter = new ObjectParameter("DateReport", dateReport);
            }
            else
            {
                dateReportParameter = new ObjectParameter("DateReport", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("SetDayPriceHigh", dateReportParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="symbolName">No Metadata Documentation available.</param>
        public int CalculateDayChange(global::System.String symbolName)
        {
            ObjectParameter symbolNameParameter;
            if (symbolName != null)
            {
                symbolNameParameter = new ObjectParameter("symbolName", symbolName);
            }
            else
            {
                symbolNameParameter = new ObjectParameter("symbolName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("CalculateDayChange", symbolNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="symbolName">No Metadata Documentation available.</param>
        public int CalculateDayDifference(global::System.String symbolName)
        {
            ObjectParameter symbolNameParameter;
            if (symbolName != null)
            {
                symbolNameParameter = new ObjectParameter("symbolName", symbolName);
            }
            else
            {
                symbolNameParameter = new ObjectParameter("symbolName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("CalculateDayDifference", symbolNameParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReportWatchModel", Name="DayChange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayChange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DayChange object.
        /// </summary>
        /// <param name="dayChangeId">Initial value of the DayChangeId property.</param>
        /// <param name="symbolName">Initial value of the SymbolName property.</param>
        /// <param name="dayChangeDate">Initial value of the DayChangeDate property.</param>
        /// <param name="dayChangeOpen">Initial value of the DayChangeOpen property.</param>
        /// <param name="dayChangeHigh">Initial value of the DayChangeHigh property.</param>
        /// <param name="dayChangeLow">Initial value of the DayChangeLow property.</param>
        /// <param name="dayChangeClose">Initial value of the DayChangeClose property.</param>
        /// <param name="dayChangeAdjustedClose">Initial value of the DayChangeAdjustedClose property.</param>
        /// <param name="dayChangeVolume">Initial value of the DayChangeVolume property.</param>
        public static DayChange CreateDayChange(global::System.Guid dayChangeId, global::System.String symbolName, global::System.DateTime dayChangeDate, global::System.Double dayChangeOpen, global::System.Double dayChangeHigh, global::System.Double dayChangeLow, global::System.Double dayChangeClose, global::System.Double dayChangeAdjustedClose, global::System.Double dayChangeVolume)
        {
            DayChange dayChange = new DayChange();
            dayChange.DayChangeId = dayChangeId;
            dayChange.SymbolName = symbolName;
            dayChange.DayChangeDate = dayChangeDate;
            dayChange.DayChangeOpen = dayChangeOpen;
            dayChange.DayChangeHigh = dayChangeHigh;
            dayChange.DayChangeLow = dayChangeLow;
            dayChange.DayChangeClose = dayChangeClose;
            dayChange.DayChangeAdjustedClose = dayChangeAdjustedClose;
            dayChange.DayChangeVolume = dayChangeVolume;
            return dayChange;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DayChangeId
        {
            get
            {
                return _DayChangeId;
            }
            set
            {
                if (_DayChangeId != value)
                {
                    OnDayChangeIdChanging(value);
                    ReportPropertyChanging("DayChangeId");
                    _DayChangeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DayChangeId");
                    OnDayChangeIdChanged();
                }
            }
        }
        private global::System.Guid _DayChangeId;
        partial void OnDayChangeIdChanging(global::System.Guid value);
        partial void OnDayChangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SymbolName
        {
            get
            {
                return _SymbolName;
            }
            set
            {
                if (_SymbolName != value)
                {
                    OnSymbolNameChanging(value);
                    ReportPropertyChanging("SymbolName");
                    _SymbolName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SymbolName");
                    OnSymbolNameChanged();
                }
            }
        }
        private global::System.String _SymbolName;
        partial void OnSymbolNameChanging(global::System.String value);
        partial void OnSymbolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DayChangeDate
        {
            get
            {
                return _DayChangeDate;
            }
            set
            {
                OnDayChangeDateChanging(value);
                ReportPropertyChanging("DayChangeDate");
                _DayChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeDate");
                OnDayChangeDateChanged();
            }
        }
        private global::System.DateTime _DayChangeDate;
        partial void OnDayChangeDateChanging(global::System.DateTime value);
        partial void OnDayChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayChangeOpen
        {
            get
            {
                return _DayChangeOpen;
            }
            set
            {
                OnDayChangeOpenChanging(value);
                ReportPropertyChanging("DayChangeOpen");
                _DayChangeOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeOpen");
                OnDayChangeOpenChanged();
            }
        }
        private global::System.Double _DayChangeOpen;
        partial void OnDayChangeOpenChanging(global::System.Double value);
        partial void OnDayChangeOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayChangeHigh
        {
            get
            {
                return _DayChangeHigh;
            }
            set
            {
                OnDayChangeHighChanging(value);
                ReportPropertyChanging("DayChangeHigh");
                _DayChangeHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeHigh");
                OnDayChangeHighChanged();
            }
        }
        private global::System.Double _DayChangeHigh;
        partial void OnDayChangeHighChanging(global::System.Double value);
        partial void OnDayChangeHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayChangeLow
        {
            get
            {
                return _DayChangeLow;
            }
            set
            {
                OnDayChangeLowChanging(value);
                ReportPropertyChanging("DayChangeLow");
                _DayChangeLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeLow");
                OnDayChangeLowChanged();
            }
        }
        private global::System.Double _DayChangeLow;
        partial void OnDayChangeLowChanging(global::System.Double value);
        partial void OnDayChangeLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayChangeClose
        {
            get
            {
                return _DayChangeClose;
            }
            set
            {
                OnDayChangeCloseChanging(value);
                ReportPropertyChanging("DayChangeClose");
                _DayChangeClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeClose");
                OnDayChangeCloseChanged();
            }
        }
        private global::System.Double _DayChangeClose;
        partial void OnDayChangeCloseChanging(global::System.Double value);
        partial void OnDayChangeCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayChangeAdjustedClose
        {
            get
            {
                return _DayChangeAdjustedClose;
            }
            set
            {
                OnDayChangeAdjustedCloseChanging(value);
                ReportPropertyChanging("DayChangeAdjustedClose");
                _DayChangeAdjustedClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeAdjustedClose");
                OnDayChangeAdjustedCloseChanged();
            }
        }
        private global::System.Double _DayChangeAdjustedClose;
        partial void OnDayChangeAdjustedCloseChanging(global::System.Double value);
        partial void OnDayChangeAdjustedCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayChangeVolume
        {
            get
            {
                return _DayChangeVolume;
            }
            set
            {
                OnDayChangeVolumeChanging(value);
                ReportPropertyChanging("DayChangeVolume");
                _DayChangeVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayChangeVolume");
                OnDayChangeVolumeChanged();
            }
        }
        private global::System.Double _DayChangeVolume;
        partial void OnDayChangeVolumeChanging(global::System.Double value);
        partial void OnDayChangeVolumeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_DayChange_Symbol", "Symbol")]
        public Symbol SymbolSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_DayChange_Symbol", "Symbol").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_DayChange_Symbol", "Symbol").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Symbol> SymbolSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_DayChange_Symbol", "Symbol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Symbol>("ReportWatchModel.FK_DayChange_Symbol", "Symbol", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReportWatchModel", Name="DayDifference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayDifference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DayDifference object.
        /// </summary>
        /// <param name="dayDifferenceId">Initial value of the DayDifferenceId property.</param>
        /// <param name="symbolName">Initial value of the SymbolName property.</param>
        /// <param name="dayDifferenceDate">Initial value of the DayDifferenceDate property.</param>
        /// <param name="dayDifferenceOpen">Initial value of the DayDifferenceOpen property.</param>
        /// <param name="dayDifferenceHigh">Initial value of the DayDifferenceHigh property.</param>
        /// <param name="dayDifferenceLow">Initial value of the DayDifferenceLow property.</param>
        /// <param name="dayDifferenceClose">Initial value of the DayDifferenceClose property.</param>
        /// <param name="dayDifferenceAdjustedClose">Initial value of the DayDifferenceAdjustedClose property.</param>
        /// <param name="dayDifferenceVolume">Initial value of the DayDifferenceVolume property.</param>
        public static DayDifference CreateDayDifference(global::System.Guid dayDifferenceId, global::System.String symbolName, global::System.DateTime dayDifferenceDate, global::System.Double dayDifferenceOpen, global::System.Double dayDifferenceHigh, global::System.Double dayDifferenceLow, global::System.Double dayDifferenceClose, global::System.Double dayDifferenceAdjustedClose, global::System.Double dayDifferenceVolume)
        {
            DayDifference dayDifference = new DayDifference();
            dayDifference.DayDifferenceId = dayDifferenceId;
            dayDifference.SymbolName = symbolName;
            dayDifference.DayDifferenceDate = dayDifferenceDate;
            dayDifference.DayDifferenceOpen = dayDifferenceOpen;
            dayDifference.DayDifferenceHigh = dayDifferenceHigh;
            dayDifference.DayDifferenceLow = dayDifferenceLow;
            dayDifference.DayDifferenceClose = dayDifferenceClose;
            dayDifference.DayDifferenceAdjustedClose = dayDifferenceAdjustedClose;
            dayDifference.DayDifferenceVolume = dayDifferenceVolume;
            return dayDifference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DayDifferenceId
        {
            get
            {
                return _DayDifferenceId;
            }
            set
            {
                if (_DayDifferenceId != value)
                {
                    OnDayDifferenceIdChanging(value);
                    ReportPropertyChanging("DayDifferenceId");
                    _DayDifferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DayDifferenceId");
                    OnDayDifferenceIdChanged();
                }
            }
        }
        private global::System.Guid _DayDifferenceId;
        partial void OnDayDifferenceIdChanging(global::System.Guid value);
        partial void OnDayDifferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SymbolName
        {
            get
            {
                return _SymbolName;
            }
            set
            {
                if (_SymbolName != value)
                {
                    OnSymbolNameChanging(value);
                    ReportPropertyChanging("SymbolName");
                    _SymbolName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SymbolName");
                    OnSymbolNameChanged();
                }
            }
        }
        private global::System.String _SymbolName;
        partial void OnSymbolNameChanging(global::System.String value);
        partial void OnSymbolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DayDifferenceDate
        {
            get
            {
                return _DayDifferenceDate;
            }
            set
            {
                OnDayDifferenceDateChanging(value);
                ReportPropertyChanging("DayDifferenceDate");
                _DayDifferenceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceDate");
                OnDayDifferenceDateChanged();
            }
        }
        private global::System.DateTime _DayDifferenceDate;
        partial void OnDayDifferenceDateChanging(global::System.DateTime value);
        partial void OnDayDifferenceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayDifferenceOpen
        {
            get
            {
                return _DayDifferenceOpen;
            }
            set
            {
                OnDayDifferenceOpenChanging(value);
                ReportPropertyChanging("DayDifferenceOpen");
                _DayDifferenceOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceOpen");
                OnDayDifferenceOpenChanged();
            }
        }
        private global::System.Double _DayDifferenceOpen;
        partial void OnDayDifferenceOpenChanging(global::System.Double value);
        partial void OnDayDifferenceOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayDifferenceHigh
        {
            get
            {
                return _DayDifferenceHigh;
            }
            set
            {
                OnDayDifferenceHighChanging(value);
                ReportPropertyChanging("DayDifferenceHigh");
                _DayDifferenceHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceHigh");
                OnDayDifferenceHighChanged();
            }
        }
        private global::System.Double _DayDifferenceHigh;
        partial void OnDayDifferenceHighChanging(global::System.Double value);
        partial void OnDayDifferenceHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayDifferenceLow
        {
            get
            {
                return _DayDifferenceLow;
            }
            set
            {
                OnDayDifferenceLowChanging(value);
                ReportPropertyChanging("DayDifferenceLow");
                _DayDifferenceLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceLow");
                OnDayDifferenceLowChanged();
            }
        }
        private global::System.Double _DayDifferenceLow;
        partial void OnDayDifferenceLowChanging(global::System.Double value);
        partial void OnDayDifferenceLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayDifferenceClose
        {
            get
            {
                return _DayDifferenceClose;
            }
            set
            {
                OnDayDifferenceCloseChanging(value);
                ReportPropertyChanging("DayDifferenceClose");
                _DayDifferenceClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceClose");
                OnDayDifferenceCloseChanged();
            }
        }
        private global::System.Double _DayDifferenceClose;
        partial void OnDayDifferenceCloseChanging(global::System.Double value);
        partial void OnDayDifferenceCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayDifferenceAdjustedClose
        {
            get
            {
                return _DayDifferenceAdjustedClose;
            }
            set
            {
                OnDayDifferenceAdjustedCloseChanging(value);
                ReportPropertyChanging("DayDifferenceAdjustedClose");
                _DayDifferenceAdjustedClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceAdjustedClose");
                OnDayDifferenceAdjustedCloseChanged();
            }
        }
        private global::System.Double _DayDifferenceAdjustedClose;
        partial void OnDayDifferenceAdjustedCloseChanging(global::System.Double value);
        partial void OnDayDifferenceAdjustedCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DayDifferenceVolume
        {
            get
            {
                return _DayDifferenceVolume;
            }
            set
            {
                OnDayDifferenceVolumeChanging(value);
                ReportPropertyChanging("DayDifferenceVolume");
                _DayDifferenceVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayDifferenceVolume");
                OnDayDifferenceVolumeChanged();
            }
        }
        private global::System.Double _DayDifferenceVolume;
        partial void OnDayDifferenceVolumeChanging(global::System.Double value);
        partial void OnDayDifferenceVolumeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_DayDifference_Symbol", "Symbol")]
        public Symbol SymbolSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_DayDifference_Symbol", "Symbol").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_DayDifference_Symbol", "Symbol").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Symbol> SymbolSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_DayDifference_Symbol", "Symbol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Symbol>("ReportWatchModel.FK_DayDifference_Symbol", "Symbol", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReportWatchModel", Name="DayPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DayPrice object.
        /// </summary>
        /// <param name="dayPriceId">Initial value of the DayPriceId property.</param>
        /// <param name="symbolName">Initial value of the SymbolName property.</param>
        /// <param name="dayPriceDate">Initial value of the DayPriceDate property.</param>
        /// <param name="dayPriceOpen">Initial value of the DayPriceOpen property.</param>
        /// <param name="dayPriceHigh">Initial value of the DayPriceHigh property.</param>
        /// <param name="dayPriceLow">Initial value of the DayPriceLow property.</param>
        /// <param name="dayPriceClose">Initial value of the DayPriceClose property.</param>
        /// <param name="dayPriceAdjustedClose">Initial value of the DayPriceAdjustedClose property.</param>
        /// <param name="dayPriceVolume">Initial value of the DayPriceVolume property.</param>
        public static DayPrice CreateDayPrice(global::System.Guid dayPriceId, global::System.String symbolName, global::System.DateTime dayPriceDate, global::System.Decimal dayPriceOpen, global::System.Decimal dayPriceHigh, global::System.Decimal dayPriceLow, global::System.Decimal dayPriceClose, global::System.Decimal dayPriceAdjustedClose, global::System.Int64 dayPriceVolume)
        {
            DayPrice dayPrice = new DayPrice();
            dayPrice.DayPriceId = dayPriceId;
            dayPrice.SymbolName = symbolName;
            dayPrice.DayPriceDate = dayPriceDate;
            dayPrice.DayPriceOpen = dayPriceOpen;
            dayPrice.DayPriceHigh = dayPriceHigh;
            dayPrice.DayPriceLow = dayPriceLow;
            dayPrice.DayPriceClose = dayPriceClose;
            dayPrice.DayPriceAdjustedClose = dayPriceAdjustedClose;
            dayPrice.DayPriceVolume = dayPriceVolume;
            return dayPrice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DayPriceId
        {
            get
            {
                return _DayPriceId;
            }
            set
            {
                if (_DayPriceId != value)
                {
                    OnDayPriceIdChanging(value);
                    ReportPropertyChanging("DayPriceId");
                    _DayPriceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DayPriceId");
                    OnDayPriceIdChanged();
                }
            }
        }
        private global::System.Guid _DayPriceId;
        partial void OnDayPriceIdChanging(global::System.Guid value);
        partial void OnDayPriceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SymbolName
        {
            get
            {
                return _SymbolName;
            }
            set
            {
                if (_SymbolName != value)
                {
                    OnSymbolNameChanging(value);
                    ReportPropertyChanging("SymbolName");
                    _SymbolName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SymbolName");
                    OnSymbolNameChanged();
                }
            }
        }
        private global::System.String _SymbolName;
        partial void OnSymbolNameChanging(global::System.String value);
        partial void OnSymbolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DayPriceDate
        {
            get
            {
                return _DayPriceDate;
            }
            set
            {
                OnDayPriceDateChanging(value);
                ReportPropertyChanging("DayPriceDate");
                _DayPriceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceDate");
                OnDayPriceDateChanged();
            }
        }
        private global::System.DateTime _DayPriceDate;
        partial void OnDayPriceDateChanging(global::System.DateTime value);
        partial void OnDayPriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPriceOpen
        {
            get
            {
                return _DayPriceOpen;
            }
            set
            {
                OnDayPriceOpenChanging(value);
                ReportPropertyChanging("DayPriceOpen");
                _DayPriceOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceOpen");
                OnDayPriceOpenChanged();
            }
        }
        private global::System.Decimal _DayPriceOpen;
        partial void OnDayPriceOpenChanging(global::System.Decimal value);
        partial void OnDayPriceOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPriceHigh
        {
            get
            {
                return _DayPriceHigh;
            }
            set
            {
                OnDayPriceHighChanging(value);
                ReportPropertyChanging("DayPriceHigh");
                _DayPriceHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceHigh");
                OnDayPriceHighChanged();
            }
        }
        private global::System.Decimal _DayPriceHigh;
        partial void OnDayPriceHighChanging(global::System.Decimal value);
        partial void OnDayPriceHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPriceLow
        {
            get
            {
                return _DayPriceLow;
            }
            set
            {
                OnDayPriceLowChanging(value);
                ReportPropertyChanging("DayPriceLow");
                _DayPriceLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceLow");
                OnDayPriceLowChanged();
            }
        }
        private global::System.Decimal _DayPriceLow;
        partial void OnDayPriceLowChanging(global::System.Decimal value);
        partial void OnDayPriceLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPriceClose
        {
            get
            {
                return _DayPriceClose;
            }
            set
            {
                OnDayPriceCloseChanging(value);
                ReportPropertyChanging("DayPriceClose");
                _DayPriceClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceClose");
                OnDayPriceCloseChanged();
            }
        }
        private global::System.Decimal _DayPriceClose;
        partial void OnDayPriceCloseChanging(global::System.Decimal value);
        partial void OnDayPriceCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPriceAdjustedClose
        {
            get
            {
                return _DayPriceAdjustedClose;
            }
            set
            {
                OnDayPriceAdjustedCloseChanging(value);
                ReportPropertyChanging("DayPriceAdjustedClose");
                _DayPriceAdjustedClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceAdjustedClose");
                OnDayPriceAdjustedCloseChanged();
            }
        }
        private global::System.Decimal _DayPriceAdjustedClose;
        partial void OnDayPriceAdjustedCloseChanging(global::System.Decimal value);
        partial void OnDayPriceAdjustedCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DayPriceVolume
        {
            get
            {
                return _DayPriceVolume;
            }
            set
            {
                OnDayPriceVolumeChanging(value);
                ReportPropertyChanging("DayPriceVolume");
                _DayPriceVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceVolume");
                OnDayPriceVolumeChanged();
            }
        }
        private global::System.Int64 _DayPriceVolume;
        partial void OnDayPriceVolumeChanging(global::System.Int64 value);
        partial void OnDayPriceVolumeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_Day_Symbol", "SymbolSet")]
        public Symbol Symbol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_Day_Symbol", "SymbolSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_Day_Symbol", "SymbolSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Symbol> SymbolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_Day_Symbol", "SymbolSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Symbol>("ReportWatchModel.FK_Day_Symbol", "SymbolSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReportWatchModel", Name="ExceptionLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExceptionLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExceptionLog object.
        /// </summary>
        /// <param name="exceptionLogId">Initial value of the ExceptionLogId property.</param>
        /// <param name="exceptionLogDate">Initial value of the ExceptionLogDate property.</param>
        /// <param name="exceptionLogMessage">Initial value of the ExceptionLogMessage property.</param>
        /// <param name="exceptionLogStackTrace">Initial value of the ExceptionLogStackTrace property.</param>
        public static ExceptionLog CreateExceptionLog(global::System.Guid exceptionLogId, global::System.DateTime exceptionLogDate, global::System.String exceptionLogMessage, global::System.String exceptionLogStackTrace)
        {
            ExceptionLog exceptionLog = new ExceptionLog();
            exceptionLog.ExceptionLogId = exceptionLogId;
            exceptionLog.ExceptionLogDate = exceptionLogDate;
            exceptionLog.ExceptionLogMessage = exceptionLogMessage;
            exceptionLog.ExceptionLogStackTrace = exceptionLogStackTrace;
            return exceptionLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExceptionLogId
        {
            get
            {
                return _ExceptionLogId;
            }
            set
            {
                if (_ExceptionLogId != value)
                {
                    OnExceptionLogIdChanging(value);
                    ReportPropertyChanging("ExceptionLogId");
                    _ExceptionLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExceptionLogId");
                    OnExceptionLogIdChanged();
                }
            }
        }
        private global::System.Guid _ExceptionLogId;
        partial void OnExceptionLogIdChanging(global::System.Guid value);
        partial void OnExceptionLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExceptionLogDate
        {
            get
            {
                return _ExceptionLogDate;
            }
            set
            {
                OnExceptionLogDateChanging(value);
                ReportPropertyChanging("ExceptionLogDate");
                _ExceptionLogDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExceptionLogDate");
                OnExceptionLogDateChanged();
            }
        }
        private global::System.DateTime _ExceptionLogDate;
        partial void OnExceptionLogDateChanging(global::System.DateTime value);
        partial void OnExceptionLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExceptionLogMessage
        {
            get
            {
                return _ExceptionLogMessage;
            }
            set
            {
                OnExceptionLogMessageChanging(value);
                ReportPropertyChanging("ExceptionLogMessage");
                _ExceptionLogMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExceptionLogMessage");
                OnExceptionLogMessageChanged();
            }
        }
        private global::System.String _ExceptionLogMessage;
        partial void OnExceptionLogMessageChanging(global::System.String value);
        partial void OnExceptionLogMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExceptionLogStackTrace
        {
            get
            {
                return _ExceptionLogStackTrace;
            }
            set
            {
                OnExceptionLogStackTraceChanging(value);
                ReportPropertyChanging("ExceptionLogStackTrace");
                _ExceptionLogStackTrace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExceptionLogStackTrace");
                OnExceptionLogStackTraceChanged();
            }
        }
        private global::System.String _ExceptionLogStackTrace;
        partial void OnExceptionLogStackTraceChanging(global::System.String value);
        partial void OnExceptionLogStackTraceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReportWatchModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="symbolName">Initial value of the SymbolName property.</param>
        /// <param name="reportDate">Initial value of the ReportDate property.</param>
        /// <param name="reportActual">Initial value of the ReportActual property.</param>
        /// <param name="reportExpected">Initial value of the ReportExpected property.</param>
        /// <param name="reportPreviousYear">Initial value of the ReportPreviousYear property.</param>
        /// <param name="dayPriceHigh">Initial value of the DayPriceHigh property.</param>
        /// <param name="reportName">Initial value of the ReportName property.</param>
        /// <param name="reportTitle">Initial value of the ReportTitle property.</param>
        public static Report CreateReport(global::System.Guid reportId, global::System.String symbolName, global::System.DateTime reportDate, global::System.Decimal reportActual, global::System.Decimal reportExpected, global::System.Decimal reportPreviousYear, global::System.Decimal dayPriceHigh, global::System.String reportName, global::System.String reportTitle)
        {
            Report report = new Report();
            report.ReportId = reportId;
            report.SymbolName = symbolName;
            report.ReportDate = reportDate;
            report.ReportActual = reportActual;
            report.ReportExpected = reportExpected;
            report.ReportPreviousYear = reportPreviousYear;
            report.DayPriceHigh = dayPriceHigh;
            report.ReportName = reportName;
            report.ReportTitle = reportTitle;
            return report;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SymbolName
        {
            get
            {
                return _SymbolName;
            }
            set
            {
                if (_SymbolName != value)
                {
                    OnSymbolNameChanging(value);
                    ReportPropertyChanging("SymbolName");
                    _SymbolName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SymbolName");
                    OnSymbolNameChanged();
                }
            }
        }
        private global::System.String _SymbolName;
        partial void OnSymbolNameChanging(global::System.String value);
        partial void OnSymbolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportDate
        {
            get
            {
                return _ReportDate;
            }
            set
            {
                OnReportDateChanging(value);
                ReportPropertyChanging("ReportDate");
                _ReportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportDate");
                OnReportDateChanged();
            }
        }
        private global::System.DateTime _ReportDate;
        partial void OnReportDateChanging(global::System.DateTime value);
        partial void OnReportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ReportActual
        {
            get
            {
                return _ReportActual;
            }
            set
            {
                OnReportActualChanging(value);
                ReportPropertyChanging("ReportActual");
                _ReportActual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportActual");
                OnReportActualChanged();
            }
        }
        private global::System.Decimal _ReportActual;
        partial void OnReportActualChanging(global::System.Decimal value);
        partial void OnReportActualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ReportExpected
        {
            get
            {
                return _ReportExpected;
            }
            set
            {
                OnReportExpectedChanging(value);
                ReportPropertyChanging("ReportExpected");
                _ReportExpected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportExpected");
                OnReportExpectedChanged();
            }
        }
        private global::System.Decimal _ReportExpected;
        partial void OnReportExpectedChanging(global::System.Decimal value);
        partial void OnReportExpectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ReportPreviousYear
        {
            get
            {
                return _ReportPreviousYear;
            }
            set
            {
                OnReportPreviousYearChanging(value);
                ReportPropertyChanging("ReportPreviousYear");
                _ReportPreviousYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportPreviousYear");
                OnReportPreviousYearChanged();
            }
        }
        private global::System.Decimal _ReportPreviousYear;
        partial void OnReportPreviousYearChanging(global::System.Decimal value);
        partial void OnReportPreviousYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DayPriceHigh
        {
            get
            {
                return _DayPriceHigh;
            }
            set
            {
                OnDayPriceHighChanging(value);
                ReportPropertyChanging("DayPriceHigh");
                _DayPriceHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayPriceHigh");
                OnDayPriceHighChanged();
            }
        }
        private global::System.Decimal _DayPriceHigh;
        partial void OnDayPriceHighChanging(global::System.Decimal value);
        partial void OnDayPriceHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportName
        {
            get
            {
                return _ReportName;
            }
            set
            {
                OnReportNameChanging(value);
                ReportPropertyChanging("ReportName");
                _ReportName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportName");
                OnReportNameChanged();
            }
        }
        private global::System.String _ReportName;
        partial void OnReportNameChanging(global::System.String value);
        partial void OnReportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportTitle
        {
            get
            {
                return _ReportTitle;
            }
            set
            {
                OnReportTitleChanging(value);
                ReportPropertyChanging("ReportTitle");
                _ReportTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportTitle");
                OnReportTitleChanged();
            }
        }
        private global::System.String _ReportTitle;
        partial void OnReportTitleChanging(global::System.String value);
        partial void OnReportTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_Report_Symbol", "SymbolSet")]
        public Symbol Symbol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_Report_Symbol", "SymbolSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_Report_Symbol", "SymbolSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Symbol> SymbolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("ReportWatchModel.FK_Report_Symbol", "SymbolSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Symbol>("ReportWatchModel.FK_Report_Symbol", "SymbolSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReportWatchModel", Name="Symbol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Symbol : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Symbol object.
        /// </summary>
        /// <param name="symbolName">Initial value of the SymbolName property.</param>
        /// <param name="indexSymbolName">Initial value of the IndexSymbolName property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Symbol CreateSymbol(global::System.String symbolName, global::System.String indexSymbolName, global::System.String companyName)
        {
            Symbol symbol = new Symbol();
            symbol.SymbolName = symbolName;
            symbol.IndexSymbolName = indexSymbolName;
            symbol.CompanyName = companyName;
            return symbol;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SymbolName
        {
            get
            {
                return _SymbolName;
            }
            set
            {
                if (_SymbolName != value)
                {
                    OnSymbolNameChanging(value);
                    ReportPropertyChanging("SymbolName");
                    _SymbolName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SymbolName");
                    OnSymbolNameChanged();
                }
            }
        }
        private global::System.String _SymbolName;
        partial void OnSymbolNameChanging(global::System.String value);
        partial void OnSymbolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndexSymbolName
        {
            get
            {
                return _IndexSymbolName;
            }
            set
            {
                OnIndexSymbolNameChanging(value);
                ReportPropertyChanging("IndexSymbolName");
                _IndexSymbolName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IndexSymbolName");
                OnIndexSymbolNameChanged();
            }
        }
        private global::System.String _IndexSymbolName;
        partial void OnIndexSymbolNameChanging(global::System.String value);
        partial void OnIndexSymbolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReportDate
        {
            get
            {
                return _ReportDate;
            }
            set
            {
                OnReportDateChanging(value);
                ReportPropertyChanging("ReportDate");
                _ReportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportDate");
                OnReportDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReportDate;
        partial void OnReportDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReportDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_Day_Symbol", "DayPriceSet")]
        public EntityCollection<DayPrice> DayPriceSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayPrice>("ReportWatchModel.FK_Day_Symbol", "DayPriceSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayPrice>("ReportWatchModel.FK_Day_Symbol", "DayPriceSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_Report_Symbol", "ReportSet")]
        public EntityCollection<Report> ReportSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("ReportWatchModel.FK_Report_Symbol", "ReportSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("ReportWatchModel.FK_Report_Symbol", "ReportSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_DayChange_Symbol", "DayChangeSet")]
        public EntityCollection<DayChange> DayChangeSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayChange>("ReportWatchModel.FK_DayChange_Symbol", "DayChangeSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayChange>("ReportWatchModel.FK_DayChange_Symbol", "DayChangeSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReportWatchModel", "FK_DayDifference_Symbol", "DayDifferenceSet")]
        public EntityCollection<DayDifference> DayDifferenceSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayDifference>("ReportWatchModel.FK_DayDifference_Symbol", "DayDifferenceSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayDifference>("ReportWatchModel.FK_DayDifference_Symbol", "DayDifferenceSet", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
